{"version":3,"file":"static/js/867.6dd8c233.chunk.js","mappings":"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","sources":["components/MovieCast/MovieCast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","hooks/useApiData.jsx"],"sourcesContent":["import React from 'react';\nimport {Section, Container} from \"../GlobalStyle\";\nimport {useParams} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {Box} from \"@chakra-ui/react\";\nimport useApiData from \"hooks/useApiData\";\n\nconst CastItem = styled.li`\n    margin-top: 30px;\n  `;\n\nconst MovieCast = () => {\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const params = useParams();\n  const {movieId} = params;\n  const {apiData} = useApiData(`/movie/${movieId}/credits?api_key=${apiKey}`);\n\n  if (!apiData) {\n    return null;\n  }\n\n  const movieCast = apiData.cast;\n\n  if (movieCast && movieCast.length === 0) {\n    return (\n      <Section>\n        <Container>\n          <Box pt='40px'>\n            <h3>We don't have any info about cast for this film</h3>\n          </Box>\n        </Container>\n      </Section>\n    )\n  }\n\n  return (\n    <Section>\n      <Container>\n        <ul>\n          {movieCast.map(({name, profile_path, character}) => (\n            <CastItem key={name}>\n              <img src={ profile_path ? `https://image.tmdb.org/t/p/w200/${profile_path}` : '/assets/img/none.svg'} width='200' height='300' alt={`${name}`}/>\n              <Box as='h3' mt='10px'>{name}</Box>\n              <Box as='h4' mt='5px'>{character}</Box>\n            </CastItem>\n          ))}\n        </ul>\n      </Container>\n    </Section>\n  )\n}\n\nexport default MovieCast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useState } from 'react';\n\nconst useApiData = (endpoint, url = 'https://api.themoviedb.org/3') => {\n  const [apiData, setApiData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${url}${endpoint}`);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const res = await response.json();\n        setApiData(res);\n      } catch (err) {\n        setError(err.message); // Використовуємо err.message для отримання тексту помилки\n      }\n    };\n\n    fetchData();\n  }, [endpoint, url]);\n\n  return { apiData, error };\n};\n\nexport default useApiData;\n"],"names":["CastItem","styled","_templateObject","_taggedTemplateLiteral","movieId","useParams","apiData","useApiData","concat","process","movieCast","cast","length","_jsx","Section","children","Container","Box","pt","map","_ref","name","profile_path","character","_jsxs","src","width","height","alt","as","mt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","endpoint","url","_useState","useState","_useState2","_slicedToArray","setApiData","_useState3","_useState4","setError","useEffect","fetchData","_regeneratorRuntime","_callee","response","res","_context","prev","next","fetch","sent","ok","Error","status","json","t0","message","stop"],"sourceRoot":""}